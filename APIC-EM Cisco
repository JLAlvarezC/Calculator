import json 
import requests
from tabulate import *
requests.packages.urllib3.disable_warnings()
def get_ticket():
    requests.packages.urllib3.disable_warnings()
    url_ticket = "https://devnetsbx-netacad-apicem-3.cisco.com/api/v1/ticket"
    headers = {"Content-Type":"application/json"}
    body_json = {"password":"Xj3BDqbU","username":"devnetuser"}
    resp = requests.post(url_ticket , json.dumps(body_json) , headers=headers , verify=False)
    response_json = resp.json()
    serviceTicket = response_json["response"]["serviceTicket"] 
    return serviceTicket
def idDevices():
    url_networkDevice = "https://devnetsbx-netacad-apicem-3.cisco.com/api/v1/reachability-info"
    ticket = get_ticket()
    headers = {"Content-Type":"application/json", "X-Auth-Token":ticket}

    resp = requests.get(url_networkDevice,headers=headers,verify=False)
    response_json = resp.json()
    NetworkDevice_list = []
    i=0
    for item in response_json["response"]:
        i+=1
        host = [i,item["mgmtIp"],item["id"]]
        NetworkDevice_list.append(host)
    table_header = ["Number","IP de Gestion","ID"]
    print(tabulate(NetworkDevice_list,table_header))
while True:
    print("\n****************** APIC-EM de Cisco *************************\n\nIndique la petición que quiere realizar, introduzca valor:")
    print("1. Obtener los Host de la Topología ")
    print("2. Obtener los Dispositivos de Red. ")
    print("3. Ver ID de los dispositivos de Red. ")
    print("4. Ver configuracion de un Dispositivo. ")
    print("0. Para salir")
    x = input()
    if x == '1':
        url_host = "https://devnetsbx-netacad-apicem-3.cisco.com/api/v1/host"
        ticket = get_ticket()
        headers = {"Content-Type":"application/json", "X-Auth-Token": ticket}

        resp = requests.get(url_host,headers=headers,verify=False)
        response_json = resp.json()
        host_list = []
        
        i = 0
        for item in response_json["response"]:
            i+=1
            host = [i, item["hostType"],item["hostIp"],item["hostMac"],item["vlanId"]]
            host_list.append(host)
        
        table_header = ["Number", "Type","IP","Mac Address","Vlan"]
        print(tabulate(host_list,table_header))        
    elif x == '2':
        url_networkDevice = "https://devnetsbx-netacad-apicem-3.cisco.com/api/v1/network-device"
        ticket = get_ticket()
        headers = {"Content-Type":"application/json", "X-Auth-Token":ticket}

        resp = requests.get(url_networkDevice,headers=headers,verify=False)
        response_json = resp.json()
        NetworkDevice_list = []
        
        i = 0
        for item in response_json["response"]:
            i+=1
            host = [i, item["type"],item["softwareVersion"],item["managementIpAddress"], item["serialNumber"]]
            NetworkDevice_list.append(host)

        table_header = ["Number","Tipo", "IOS","IP de Gestion","Serial Number"]
        print(tabulate(NetworkDevice_list,table_header))
    elif x == '3':
        idDevices()
    elif x == '4':
        def DeviceID():
            deviceID=input("\nIntroduzca el ID del dispositivo que quiere ver la configuracion (3 para verlos de nuevo) ")
            if deviceID == '':
                print("introduzca ID..")
                return DeviceID()
            elif deviceID == '3':
                idDevices()
                return DeviceID() 
            url_configDevices = "https://devnetsbx-netacad-apicem-3.cisco.com/api/v1/network-device/"+deviceID+"/config"
            ticket = get_ticket()
            headers = {"Content-Type":"application/json","X-Auth-Token":ticket}
            resp = requests.get(url_configDevices,headers=headers,verify=False)
            if(resp.status_code >= 200 and resp.status_code <= 299):
                response_json = resp.json()
                print(response_json["response"])
            elif(resp.status_code >= 400 and resp.status_code <= 499):
                print("ID NO VALIDO")
            elif(resp.status_code >= 500 and resp.status_code <= 599):
                print("Error Interno, intente de nuevo más tarde.")
            else:
                print("Error de Conectividad, revise conexiones de Red")
        DeviceID()
    elif x == '0':
        break
    else:
        print("\n Opción no válida, intente de nuevo.")
